---
source: src/tests/snapshots/mod.rs
expression: dart
---
final class Foo {
  final String multipleWords;
  final String evenMoreMultipleWords;

  const Foo({required this.multipleWords, required this.evenMoreMultipleWords});

  FooBuilder toBuilder() => FooBuilder(
    multipleWords: multipleWords,
    evenMoreMultipleWords: evenMoreMultipleWords,
  );

  Map<String, dynamic> toJson() => {
    "multipleWords": multipleWords,
    "evenMoreMultipleWords": evenMoreMultipleWords,
  };
  factory Foo.fromJson(Map<String, dynamic> json) => Foo(
    multipleWords: json["multipleWords"] as String,
    evenMoreMultipleWords: json["evenMoreMultipleWords"] as String,
  );

  @override
  String toString() =>
      "Foo("
      "multipleWords: $multipleWords, "
      "evenMoreMultipleWords: $evenMoreMultipleWords"
      ")";
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Foo) {
      return false;
    }
    if (multipleWords != other.multipleWords) return false;
    if (evenMoreMultipleWords != other.evenMoreMultipleWords) return false;
    return true;
  }

  @override
  int get hashCode => Object.hashAll([multipleWords, evenMoreMultipleWords]);
}

/// Builder class for [Foo]
final class FooBuilder {
  String multipleWords;
  String evenMoreMultipleWords;

  FooBuilder({
    required this.multipleWords,
    required this.evenMoreMultipleWords,
  });

  Foo build() => Foo(
    multipleWords: multipleWords,
    evenMoreMultipleWords: evenMoreMultipleWords,
  );
}
