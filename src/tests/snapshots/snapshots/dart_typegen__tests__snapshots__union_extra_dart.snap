---
source: src/tests/snapshots/mod.rs
expression: dart
---
abstract final class Animal {
  const Animal();

  AnimalBuilder toBuilder();

  Map<String, dynamic> toJson();
  factory Animal.fromJson(Map<String, dynamic> json) =>
      switch (json["__type"]) {
        "Dog" => Dog.fromJson(json),
        "Cat" => Cat.fromJson(json),
        final other => throw ArgumentError("unknown discriminant: $other"),
      };

  void printAnimal() => print(this);
}

abstract final class AnimalBuilder {
  Animal build();
}

final class Dog extends Animal {
  const Dog() : super();

  static DogBuilder builder() => DogBuilder();
  DogBuilder toBuilder() => DogBuilder();

  @override
  Map<String, dynamic> toJson() => {"__type": "Dog"};
  factory Dog.fromJson(Map<String, dynamic> json) => Dog();

  @override
  String toString() =>
      "Dog("
      ")";
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Dog) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode => Object.hashAll([]);
}

/// Builder class for [Dog]
final class DogBuilder extends AnimalBuilder {
  DogBuilder() : super();

  Dog build() => Dog();
}

final class Cat extends Animal {
  const Cat() : super();

  static CatBuilder builder() => CatBuilder();
  CatBuilder toBuilder() => CatBuilder();

  @override
  Map<String, dynamic> toJson() => {"__type": "Cat"};
  factory Cat.fromJson(Map<String, dynamic> json) => Cat();

  @override
  String toString() =>
      "Cat("
      ")";
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Cat) {
      return false;
    }
    return true;
  }

  @override
  int get hashCode => Object.hashAll([]);

  void printCat() => print(this);
}

/// Builder class for [Cat]
final class CatBuilder extends AnimalBuilder {
  CatBuilder() : super();

  Cat build() => Cat();
}
