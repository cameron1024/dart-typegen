---
source: src/tests/snapshots/mod.rs
expression: dart
---
import "package:equatable/equatable.dart";

final class Foo with EquatableMixin {
  final String x;
  final int y;

  const Foo({this.x = "hello", this.y = 123 + 234});

  @override
  List<Object?> get props => [x, y];

  FooBuilder toBuilder() => FooBuilder(x: x, y: y);

  Map<String, dynamic> toJson() => {"x": x, "y": y};
  factory Foo.fromJson(Map<String, dynamic> json) =>
      Foo(x: json["x"] as String, y: json["y"] as int);

  @override
  String toString() =>
      "Foo("
      "x: $x,"
      "y: $y"
      ")";
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Foo) {
      return false;
    }
    if (this.x != other.x) return false;
    if (this.y != other.y) return false;
    return true;
  }

  @override
  int get hashCode => Object.hashAll([x, y]);
}

/// Builder class for [Foo]
final class FooBuilder {
  String x;
  int y;

  FooBuilder({required this.x, required this.y});

  Foo build() => Foo(x: x, y: y);
}
