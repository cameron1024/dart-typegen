---
source: src/tests/snapshots/mod.rs
expression: dart
---
import "package:equatable/equatable.dart";

final class Foo with EquatableMixin {
  final String x;

  const Foo({required this.x});

  @override
  List<Object?> get props => [x];

  FooBuilder toBuilder() => FooBuilder(x: x);

  Map<String, dynamic> toJson() => {"x": x};
  factory Foo.fromJson(Map<String, dynamic> json) =>
      Foo(x: json["x"] as String);

  @override
  String toString() =>
      "Foo("
      "x: $x"
      ")";
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) {
      return true;
    }
    if (other is! Foo) {
      return false;
    }
    if (this.x != other.x) return false;
    return true;
  }

  @override
  int get hashCode => Object.hashAll([x]);
}

/// Builder class for [Foo]
final class FooBuilder {
  String x;

  FooBuilder({required this.x});

  Foo build() => Foo(x: x);
}
